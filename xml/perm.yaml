- config:
    #   测试名称，用于测试报告标题
    name: 接口测试
    #   全局参数
    variables:
      {
        roleCode: "admin1",
        tenantCode: "System",
        accountName: "bUZRbyD6hX",
        password: "tJu4pbehKFuDd9PaW02O",
        testName_1: "Cxtest002",
      }
    #   测试用例公共请求信息
    request:
      #项目url
      base_url: https://api-dev.deepeleph.com

#      headers:
#        Content-Type: application/json

#模块名称 : 控制台账号密码登录
- LoginCases:
    #用例方法名称
    - loginCorrect:
        #用例名称
        name: 控制台账号密码登录
        #请求内容
        request:
          url: /user/center/v1/login/console/account
          method: post
          header: {
            Content-Type: application/json
          }
          #参数json格式提交 ; 表单提交 --- body: {username:"",password:""}
          json: {
            "requestId": "",
            "accountNo": $accountName,
            "password": $password
          }
          #需要提取的参数，并存放再全局参数列表中，便于后续其他接口提取，后续使用，使用$作为前置标识符
          extract: [data.token]
          #断言内容，状态码200，默认断言
          validate:
            - eq: [success,true]
            - eq: [code, 0]
          #用例前置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称,暂时未实现
          setup_hooks: []
          #用例后置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称暂时未实现
          teardown_hooks: []
    - passError:
        name: "登录密码错误"
        request:
          url: /user/center/v1/login/console/account
          method: post
          header: {
            Content-Type: application/json
          }
          json: {
            "requestId": "",
            "accountNo": $accountName,
            "password": "9GPeN0kcS4j"
          }
          validate:
            - eq: [code, 3]
            - eq: [success,false]


#权限管理
#模块名称 :创建权限
- PermCreateCases:
    #用例方法名称
    - permCreate:
        #用例名称
        name: "创建权限"
        #请求内容
        request:
          url: /user/center/v1/perm/create
          method: post
          header: {
            Content-Type: application/json
          }
          #参数json格式提交 ; 表单提交}
          json: {
            "requestId": "",
            "token": $data.token,
            "tenantCode": $tenantCode,
            "permCode":"perm_query_333",
            "permName":"权限查询1",
            "relativeUrl":"",
            "dataPermValidRules": {
            },
            "parentPermCode": ""
          }
          #需要提取的参数，并存放再全局参数列表中，便于后续其他接口提取，后续使用，使用$作为前置标识符
          extract:
          #断言内容，状态码200，默认断言
          validate:
            - eq: [success,true]
            - eq: [code, 0]
          #用例前置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称,暂时未实现
          setup_hooks: []
          #用例后置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称暂时未实现
          teardown_hooks: []

#模块名称 :修改权限
- PermUpdateCases:
    #用例方法名称
    - permUpdate:
        #用例名称
        name: "修改权限"
        #请求内容
        request:
          url: /user/center/v1/perm/update
          method: post
          header: {
            Content-Type: application/json
          }
          #参数json格式提交 ; 表单提交}
          json: {
            "requestId": "",
            "token": $data.token,
            "tenantCode": $tenantCode,
            "permCode":"perm_query_333",
            "permName":"修改权限查询",
            "relativeUrl":"",
            "dataPermValidRules": {
            },
            "parentPermCode": ""
          }
          #需要提取的参数，并存放再全局参数列表中，便于后续其他接口提取，后续使用，使用$作为前置标识符
          extract:
          #断言内容，状态码200，默认断言
          validate:
            - eq: [success,true]
            - eq: [code, 0]
          #用例前置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称,暂时未实现
          setup_hooks: []
          #用例后置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称暂时未实现
          teardown_hooks: []

#模块名称 :查询权限
- PermQueryCases:
    #用例方法名称
    - permQuery:
        #用例名称
        name: "查询权限"
        #请求内容
        request:
          url: /user/center/v1/perm/query
          method: post
          header: {
            Content-Type: application/json
          }
          #参数json格式提交 ; 表单提交}
          json: {
            "requestId": "",
            "token": $data.token,
            "tenantCode": $tenantCode
          }
          #需要提取的参数，并存放再全局参数列表中，便于后续其他接口提取，后续使用，使用$作为前置标识符
          extract:
          #断言内容，状态码200，默认断言
          validate:
            - eq: [success,true]
            - eq: [code, 0]
          #用例前置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称,暂时未实现
          setup_hooks: []
          #用例后置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称暂时未实现
          teardown_hooks: []

#模块名称 :权限授予
- PermGrantCases:
    #用例方法名称
    - permGrant:
        #用例名称
        name: "权限授予"
        #请求内容
        request:
          url: /user/center/v1/perm/grant
          method: post
          header: {
            Content-Type: application/json
          }
          #参数json格式提交 ; 表单提交}
          json: {
            "requestId": "",
            "token": $data.token,
            "tenantCode": $tenantCode,
            "assignOwner": $tenantCode,
            "permCodes":["perm_manager_333", "perm_query"]
          }
          #需要提取的参数，并存放再全局参数列表中，便于后续其他接口提取，后续使用，使用$作为前置标识符
          extract:
          #断言内容，状态码200，默认断言
          validate:
            - eq: [success,true]
            - eq: [code, 0]
          #用例前置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称,暂时未实现
          setup_hooks: []
          #用例后置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称暂时未实现
          teardown_hooks: []

#模块名称 :删除权限
- PermDeleteCases:
    #用例方法名称
    - permDelete:
        #用例名称
        name: "删除权限"
        #请求内容
        request:
          url: /user/center/v1/perm/delete
          method: post
          header: {
            Content-Type: application/json
          }
          #参数json格式提交 ; 表单提交}
          json: {
            "requestId": "",
            "token": $data.token,
            "tenantCode": $tenantCode,
            "permCode": "perm_query_333"
          }
          #需要提取的参数，并存放再全局参数列表中，便于后续其他接口提取，后续使用，使用$作为前置标识符
          extract:
          #断言内容，状态码200，默认断言
          validate:
            - eq: [success,true]
            - eq: [code, 0]
          #用例前置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称,暂时未实现
          setup_hooks: []
          #用例后置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称暂时未实现
          teardown_hooks: []

#模块名称 :资源地址查询（内部接口）
- PermInnerQueryCases:
    #用例方法名称
    - permInnerQuery:
        #用例名称
        name: "资源地址查询"
        #请求内容
        request:
          url: /user/center/v1/perm/inner/query/apis
          method: post
          header: {
            Content-Type: application/json
          }
          #参数json格式提交 ; 表单提交}
          json: {
            "requestId": "",
            "token": $data.token,
            "tenantCode": $tenantCode
          }
          #需要提取的参数，并存放再全局参数列表中，便于后续其他接口提取，后续使用，使用$作为前置标识符
          extract:
          #断言内容，状态码200，默认断言
          validate:
            - eq: [success,true]
            - eq: [code, 0]
          #用例前置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称,暂时未实现
          setup_hooks: []
          #用例后置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称暂时未实现
          teardown_hooks: []


#员工管理
#模块名称 :创建员工
- EmployeesCreateCases:
    #用例方法名称
    - employeesCreate:
        #用例名称
        name: "创建员工"
        #请求内容
        request:
          url: /user/center/v1/employee/create
          method: upload
          header: {
            Content-Type: multipart/form-data
          }
          #参数json格式提交 ; 表单提交body,其他other
          other: {
            param: {
              "requestId": "",
              "token": $roleCode,
              "tenantCode": "System",
              "poiId":"yixi001",  # 组织编码，员工所属组织
              "areaId":"test_base_sample", # 区域编码，员工所属区域
              "empNo": "zhangsan",  # 业务关联编号
              "name":"张三",
              "sex": "male",
              "age": 57,
              "idCard": "123456789012345678",
              "mobile":"18367130982",
              "createAccount": true,
              "accountNo": "测试账户",
              "password": "Cx12345678.c",
              "roleCodes": ["admin001"],
              "extendData": {
                "healthCertificate": {
                  "serialNumber": "1234567890",
                  "releaseDate": "2021-05-25",
                  "effectiveAge": 1
                }
              }
            }
          }
          multiPart: {
                       faceImage1: "C:/Users/helinfeng/Pictures/01.jpg",
                       faceImage2: "C:/Users/helinfeng/Pictures/01.jpg"
          }
          #需要提取的参数，并存放再全局参数列表中，便于后续其他接口提取，后续使用，使用$作为前置标识符
          extract:
          #断言内容，状态码200，默认断言
          validate:
            - eq: [success,true]
            - eq: [code, 0]
          #用例前置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称,暂时未实现
          setup_hooks: []
          #用例后置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称暂时未实现
          teardown_hooks: []

#模块名称 :删除员工
- EmployeesDeleteCases:
    #用例方法名称
    - employeesDelete:
        #用例名称
        name: "删除员工"
        #请求内容
        request:
          url: /user/center/v1/account/delete
          method: post
          header: {
            Content-Type: application/json
          }
          #参数json格式提交 ; 表单提交}
          json: {
            "requestId": "",
            "token": $data.token,
            "tenantCode": $tenantCode,
            "poiId":"yixi001",  # 组织编码，员工所属组织
            "areaId":"test_base_sample", # 区域编码，员工所属区域
            "empNo": "zhangsan"  # 业务关联编号

          }
          #需要提取的参数，并存放再全局参数列表中，便于后续其他接口提取，后续使用，使用$作为前置标识符
          extract:
          #断言内容，状态码200，默认断言
          validate:
            - eq: [success,true]
            - eq: [code, 0]
          #用例前置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称,暂时未实现
          setup_hooks: []
          #用例后置步骤，需要提取其他模块方法，使用模块名.方法名称，本模块方法，直接填入本模块方法名称暂时未实现
          teardown_hooks: []